resource "azurerm_template_deployment" "vmwbperfanalysis" {
    for_each                = var.vm_performanceanalysis_monitoring_workbooks
    name                    = each.value["workbookName"]
    deployment_mode         = "Incremental"
    resource_group_name     = data.azurerm_resource_group.this.name

    parameters = {
        "workbookDisplayName"   = each.value["workbookDisplayName"]
        "workbookSourceId"      = each.value["workbookSourceId"]
    }

    template_body = <<DEPLOY

{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Linux - Performance Graphs",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "Azure Monitor",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookDisplayName')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-06-17-preview",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Performance Analysis Workbook\\r\\n\\r\\nThis workbook can be used to monitor the infrastructure Performance.\"},\"name\":\"text - 1\"},{\"type\":1,\"content\":{\"json\":\"# Workbook Parameters\"},\"name\":\"text - 5\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Subscriptions}\"],\"parameters\":[{\"id\":\"1db5ee15-fe52-458b-91d1-7ee39d8c2cd3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscriptions\",\"type\":6,\"isRequired\":true,\"value\":\"value::1\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::1\"],\"includeAll\":false}},{\"id\":\"9732eff8-fb57-4cbd-8ade-5ae746f33760\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspaces\",\"type\":5,\"isRequired\":true,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| summarize by id\",\"crossComponentResources\":[\"{Subscriptions}\"],\"value\":\"value::1\",\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"additionalResourceOptions\":[\"value::1\"],\"showDefault\":false},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"5f8cce4b-9c4c-47da-8683-7e5ccc9faed3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"value\":{\"durationMs\":14400000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000,\"createdTime\":\"2018-10-04T22:01:18.372Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":900000,\"createdTime\":\"2018-10-04T22:01:18.372Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":1800000,\"createdTime\":\"2018-10-04T22:01:18.372Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":3600000,\"createdTime\":\"2018-10-04T22:01:18.372Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":14400000,\"createdTime\":\"2018-10-04T22:01:18.374Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":43200000,\"createdTime\":\"2018-10-04T22:01:18.374Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":86400000,\"createdTime\":\"2018-10-04T22:01:18.374Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":172800000,\"createdTime\":\"2018-10-04T22:01:18.374Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":259200000,\"createdTime\":\"2018-10-04T22:01:18.375Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":604800000,\"createdTime\":\"2018-10-04T22:01:18.375Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":1209600000,\"createdTime\":\"2018-10-04T22:01:18.375Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":2592000000,\"createdTime\":\"2018-10-04T22:01:18.375Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":5184000000,\"createdTime\":\"2018-10-04T22:01:18.375Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":7776000000,\"createdTime\":\"2018-10-04T22:01:18.375Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false}],\"allowCustom\":true}}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 2\"},{\"type\":1,\"content\":{\"json\":\"# Filter Parameters\"},\"name\":\"text - 5\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspaces}\"],\"parameters\":[{\"id\":\"41bb3710-5e9e-4b66-91fd-e11435899880\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ComputerNameContains\",\"label\":\"Computer Name Contains\",\"type\":1,\"description\":\"This will filter the computers whose name contains the keyword. This will query all the machines in the workspace.\",\"value\":\"\"},{\"id\":\"b533865a-3539-42b1-8dcd-33ca0d481c2a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ComputerFilter\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{\\\\\\\"snippet\\\\\\\": \\\\\\\"| where Computer contains '{ComputerNameContains}'\\\\\\\"}\\\"}\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":8},{\"id\":\"aa2368fc-ad30-4608-b96a-72abf7b1e1af\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Counter\",\"type\":2,\"description\":\"Select a VM performance counter for the table below\",\"query\":\"Perf\\r\\n| where TimeGenerated {TimeRange}\\r\\n| summarize by CounterName, ObjectName, CounterText = CounterName\\r\\n| order by ObjectName asc, CounterText asc\\r\\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName\",\"crossComponentResources\":[\"{Workspaces}\"],\"value\":\"{\\\"counter\\\":\\\"% Free Space\\\",\\\"object\\\":\\\"LogicalDisk\\\"}\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"974d5ac2-4fc5-48e7-a8f7-16fc9dddc4ac\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"CounterText\",\"type\":1,\"query\":\"let metric = dynamic({Counter});\\r\\nrange Steps from 1 to 1 step 1\\r\\n| project strcat(metric.object, \\\" > \\\", metric.counter)\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"ce228deb-88eb-4438-9dce-6c6d1972ff09\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IsNetworkCounter\",\"type\":1,\"query\":\"let metric = dynamic({Counter});\\r\\nprint tostring((metric.object == 'Network Adapter' and (metric.counter == 'Bytes Received/sec' or metric.counter == 'Bytes Sent/sec')) or (metric.object == 'Network' and (metric.counter == 'Total Bytes Received' or metric.counter == 'Total Bytes Transmitted')))\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"3b23aa7a-2afd-40ba-a710-0e2cc73c764b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"NetworkDirection\",\"type\":1,\"query\":\"let metric = dynamic({Counter});\\r\\nprint(iff(metric.counter == 'Bytes Received/sec' or metric.counter == 'Total Bytes Received', 'Received', 'Sent'))\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"9ad8858d-8ef3-4144-94b1-66a8bf9fa9c9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Aggregators\",\"type\":2,\"description\":\"Select one or more different aggregates to display in the table below\",\"isRequired\":true,\"multiSelect\":true,\"quote\":\"\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"Average\\\", \\\"label\\\":\\\"Average\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\":\\\"P5th\\\", \\\"label\\\":\\\"P5th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P10th\\\", \\\"label\\\":\\\"P10th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P50th\\\", \\\"label\\\":\\\"P50th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P80th\\\", \\\"label\\\":\\\"P80th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P90th\\\", \\\"label\\\":\\\"P90th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P95th\\\", \\\"label\\\":\\\"P95th\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\":\\\"Min\\\", \\\"label\\\":\\\"Min\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"Max\\\", \\\"label\\\":\\\"Max\\\", \\\"selected\\\": true }\\r\\n]\",\"value\":[\"Average\",\"P95th\",\"Max\",\"P5th\",\"Min\"]},{\"id\":\"6a7306ea-247f-46ca-abca-501911f9e9d3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TableTrend\",\"type\":2,\"description\":\"Select a percentile to display in the Trend column in the table below\",\"isRequired\":true,\"typeSettings\":{\"additionalResourceOptions\":[]},\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"Average = round(avg(CounterValue), 2)\\\", \\\"label\\\":\\\"Average\\\", \\\"selected\\\": true },\\r\\n    { \\\"value\\\":\\\"P5th = round(percentile(CounterValue, 5), 2)\\\", \\\"label\\\":\\\"P5th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P10th = round(percentile(CounterValue, 10), 2)\\\", \\\"label\\\":\\\"P10th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P50th = round(percentile(CounterValue, 50), 2)\\\", \\\"label\\\":\\\"P50th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P80th = round(percentile(CounterValue, 80), 2)\\\", \\\"label\\\":\\\"P80th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P90th = round(percentile(CounterValue, 90), 2)\\\", \\\"label\\\":\\\"P90th\\\", \\\"selected\\\": false },\\r\\n    { \\\"value\\\":\\\"P95th = round(percentile(CounterValue, 95), 2)\\\", \\\"label\\\":\\\"P95th\\\", \\\"selected\\\": false }\\r\\n]\"},{\"id\":\"0327f26e-cdde-4b48-b512-6c35f06ad1d0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"tableTrendOrder\",\"type\":1,\"query\":\"range Steps from 1 to 1 step 1\\r\\n| project value = iff('{TableTrend}' contains 'P5th'  or '{TableTrend}' contains 'P10th', 'asc', 'desc')\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"c2f05b6d-970d-4fde-88b0-868387c02250\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"mergedAggregators\",\"type\":1,\"query\":\"let aggregators = iff('{Aggregators}' contains '{TableTrend:label}', '{Aggregators}', '{Aggregators},{TableTrend:label}');\\r\\nrange Steps from 1 to 1 step 1\\r\\n| project aggregators\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"69c79551-68b9-4c84-bf57-202540482a02\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ShowTable\",\"type\":1,\"query\":\"print iff(\\\"{Test:value}\\\" == \\\"\\\", \\\"False\\\", iff(\\\"{IsNetworkCounter:value}\\\" == \\\"False\\\", \\\"True\\\", \\\"False\\\"))\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"6b664a24-d9a3-47b0-9d94-9cada9ddb8ce\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ShowNetworkTable\",\"type\":1,\"query\":\"print iff(\\\"{Test:value}\\\" == \\\"\\\", \\\"False\\\", \\\"{IsNetworkCounter:value}\\\")\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"343c4eae-e482-4678-a936-c4ad43b2ec19\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"CounterTest\",\"type\":1,\"query\":\"Perf\\r\\n| take 1\",\"crossComponentResources\":[\"{Workspaces}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxResultCount = 100; \\r\\nlet metric = dynamic({Counter}); \\r\\nlet summaryPerComputer = totable(Perf      | where TimeGenerated {TimeRange}   {ComputerFilter}    | where ObjectName == metric.object and CounterName == metric.counter     | summarize hint.shufflekey = Computer Average = avg(CounterValue), Max = max(CounterValue), Min = min(CounterValue), percentiles(CounterValue, 5, 10, 50, 80, 90, 95) by Computer      | project Computer, Average, Max, Min, P5th = percentile_CounterValue_5, P10th = percentile_CounterValue_10, P50th = percentile_CounterValue_50, P80th = percentile_CounterValue_80, P90th = percentile_CounterValue_90, P95th = percentile_CounterValue_95      | order by {TableTrend:label} {tableTrendOrder}, Computer      | limit maxResultCount);  let computerList = summaryPerComputer      | project Computer;  let MachineSummary = ServiceMapComputer_CL     | where TimeGenerated {TimeRange}     | where Computer in (computerList)     | summarize arg_max(TimeGenerated, *) by Computer     | project Computer, MachineSummary = pack('Fully Qualified Domain Name', Computer, 'OS Type', OperatingSystemFamily_s, 'Operating System', OperatingSystemFullName_s, 'Ipv4 Addresses', Ipv4Addresses_s,         'Ipv6 Addresses', Ipv6Addresses_s, 'Mac Addresses', MacAddresses_s, 'DNS Names', DnsNames_s, 'CPUs', strcat(Cpus_d, ' @ ', CpuSpeed_d, ' MHz'), 'Bitness', Bitness_s,         'Physcial Memory', strcat(PhysicalMemory_d, ' MB'), 'Virtualization State', VirtualizationState_s, 'VM Type', VirtualMachineType_s, 'OMS Agent', split(ResourceName_s, 'm-')[1]); let EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) []; let OmsNodeIdentityAndProps = computerList     | extend NodeId = Computer     | extend Priority = 1     | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer); let ServiceMapNodeIdentityAndProps = ServiceMapComputer_CL     | where TimeGenerated {TimeRange}     | where Computer in (computerList)     | summarize arg_max(TimeGenerated, *) by Computer     | extend Computer = ComputerName_s, AzureCloudServiceNodeIdentity = iif(isnotempty(columnifexists('AzureCloudServiceName_s', '')), strcat(columnifexists('AzureCloudServiceInstanceId_s', ''), '|',                     columnifexists('AzureCloudServiceDeployment_g', '')), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(columnifexists('AzureVmScaleSetName_s', '')),              strcat(columnifexists('AzureVmScaleSetInstanceId_s', ''), '|',                     columnifexists('AzureVmScaleSetDeployment_g', '')), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', ComputerName_s,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId_g,                   'resourceGroup', AzureResourceGroup_s,                   'azureResourceId', columnifexists('AzureResourceId_s', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', columnifexists('AzureCloudServiceInstanceId_s', ''),                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName_s', ''),                   'cloudServiceDeploymentId', columnifexists('AzureCloudServiceDeployment_g', ''),                   'cloudServiceName', columnifexists('AzureCloudServiceName_s', ''),                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('AzureName_s', ''),                   'vmScaleSetDeploymentId', columnifexists('AzureVmScaleSetDeployment_g', ''),                   'vmScaleSetName', columnifexists('AzureVmScaleSetName_s', ''),                   'serviceFabricClusterName', columnifexists('AzureServiceFabricClusterName_s', ''),                   'vmScaleSetResourceId', columnifexists('AzureVmScaleSetResourceId_s', ''),                   'resourceGroupName', columnifexists('AzureResourceGroup_s', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId_g', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 2; let NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                 | summarize arg_max(Priority, *) by Computer;  let NodeIdentityAndPropsMin = NodeIdentityAndProps     | extend Type = iff(NodeProps.type == 'StandAloneNode', iff(NodeProps.azureResourceId == '', 'Non-Azure Virtual Machine', 'Azure Virtual Machine'), NodeProps.type),      ResourceId = iff(NodeProps.type == 'AzureScaleSetNode', NodeProps.vmScaleSetResourceId,          iff(NodeProps.type == 'AzureCloudServiceNode', NodeProps.cloudServiceDeploymentId, Computer)),     ResourceName = iff(NodeProps.type == 'AzureScaleSetNode', strcat(NodeProps.vmScaleSetName, ' | ', NodeProps.scaleSetInstanceId),          iff(NodeProps.type == 'AzureCloudServiceNode', strcat(NodeProps.cloudServiceRoleName, ' | ', NodeProps.cloudServiceInstanceId), Computer))     | project Computer, Type, ResourceId, ResourceName; let trend = Perf          | where TimeGenerated {TimeRange}         | where Computer in (computerList)          | where ObjectName == metric.object and CounterName == metric.counter        | make-series {TableTrend} default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Computer     | project Computer, ['Trend ({TableTrend:label})'] = {TableTrend:label}; summaryPerComputer     | join kind=leftouter (trend) on Computer     | join kind=leftouter (NodeIdentityAndProps) on Computer     | join kind=leftouter (NodeIdentityAndPropsMin) on Computer     | join kind=leftouter (MachineSummary) on Computer     | project ResourceName, Type, {mergedAggregators}, ['Trend ({TableTrend:label})'], Properties = MachineSummary     | sort by {TableTrend:label} {tableTrendOrder} | limit maxResultCount\",\"size\":3,\"title\":\"Performance Analysis\",\"noDataMessage\":\"There is no data for this counter, either enable the counter or onboard machines to this workspace\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspaces}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Type\",\"formatter\":1},{\"columnMatch\":\"Average\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redGreen\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}},{\"columnMatch\":\"P95th\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"coldHot\"}},{\"columnMatch\":\"Max\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"P5th\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}},{\"columnMatch\":\"Min\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Trend (Average)\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Properties\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"CellDetails\",\"linkLabel\":\"ℹ️ Info\"}},{\"columnMatch\":\"P50th\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"P10th\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"P80th\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"P90th\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Trend (P95th)\",\"formatter\":10,\"formatOptions\":{\"palette\":\"magenta\"}},{\"columnMatch\":\"Trend (P5th)\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Trend (P90th)\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Trend (P80th)\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Trend (P50th)\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Trend (P10th)\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}}],\"sortBy\":[{\"itemKey\":\"$gen_heatmap_Max_4\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"$gen_heatmap_Max_4\",\"sortOrder\":1}]},\"name\":\"query - 8\"}],\"isLocked\":false,\"fallbackResourceIds\":[\"Azure Monitor\"]}",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}

    DEPLOY
}

output "vmwbperfanalysis_ids" {
    value = [for x in azurerm_template_deployment.vmwbperfanalysis : x.id]
}